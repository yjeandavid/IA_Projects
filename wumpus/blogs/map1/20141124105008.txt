My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (10;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (9;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;3) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (9;3) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;3) hasMoo 
Deduced that Supmuw is murderous. X adjacent.
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (9;3) hasMoo 
shoot the supmuw!
I has arrow and i shot.
My curNode: (9;3) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;4) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;5) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (9;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (9;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;7)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;7)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (9;7)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;5) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (9;5) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;5) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (9;5) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;4) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (9;4) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;4) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (9;4) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;3) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (7;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (7;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (7;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (3;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (3;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (4;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (1;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (2;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (2;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (3;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (3;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (4;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (4;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (4;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (4;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (7;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;5)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (6;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (6;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;3) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;4) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;5) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;8) hasBreeze 
curNode has gold and i grab the gold.
My curNode: (5;8) hasBreeze 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
I turn right.
My curNode: (5;8) hasBreeze 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
I turn right.
My curNode: (5;8) hasBreeze 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (9;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;7)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;6)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;5) hasMoo 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;4) hasStench  hasMoo 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;3) hasMoo 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
I turn right.
My curNode: (9;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: N
I turn right.
My curNode: (3;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
I turn left.
My curNode: (3;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn left.
My curNode: (1;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;1)
I has gold and Supmuw not Friendly, i go home.
I wants to leave and I am at entrance, climb out!
My curNode: (1;1)
I has gold and Supmuw not Friendly, i go home.
I wants to leave and I am at entrance, climb out!
