My curNode: (1;1)
My direction is: N
I turn left.
My curNode: (1;1)
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;2)
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;3)
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;4)
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;5) hasMoo 
My direction is: E
I turn right.
My curNode: (1;5) hasMoo 
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;5) hasStench  hasMoo 
My direction is: S
I turn right.
My curNode: (2;5) hasStench  hasMoo 
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;4)
My direction is: E
I turn left.
My curNode: (2;4)
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;4) hasBreeze 
My direction is: N
I turn left.
My curNode: (3;4) hasBreeze 
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;5)
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;6) hasStench 
My direction is: S
I turn right.
My curNode: (3;6) hasStench 
My direction is: S
I turn right.
My curNode: (3;6) hasStench 
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;5)
My direction is: E
I turn left.
My curNode: (3;5)
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;5) hasBreeze 
My direction is: N
I turn left.
My curNode: (4;5) hasBreeze 
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;6) hasBreeze 
My direction is: S
I turn right.
My curNode: (4;6) hasBreeze 
My direction is: S
I turn right.
My curNode: (4;6) hasBreeze 
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;5) hasBreeze 
My direction is: W
I turn right.
My curNode: (4;5) hasBreeze 
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;5)
My direction is: S
I turn left.
My curNode: (3;5)
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;4) hasBreeze 
My direction is: W
I turn right.
My curNode: (3;4) hasBreeze 
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;4)
My direction is: S
I turn left.
My curNode: (2;4)
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;3)
My direction is: E
I turn left.
My curNode: (2;3)
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;3)
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;3) hasBreeze 
My direction is: W
I turn right.
My curNode: (4;3) hasBreeze 
My direction is: W
I turn right.
My curNode: (4;3) hasBreeze 
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;3)
My direction is: S
I turn left.
My curNode: (3;3)
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;2)
My direction is: E
I turn left.
My curNode: (3;2)
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;2)
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;2)
My direction is: N
I turn left.
My curNode: (5;2)
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;3)
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;4) hasBreeze 
My direction is: S
I turn right.
My curNode: (5;4) hasBreeze 
My direction is: S
I turn right.
My curNode: (5;4) hasBreeze 
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;3)
My direction is: E
I turn left.
My curNode: (5;3)
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;3)
My direction is: N
I turn left.
My curNode: (6;3)
My direction is: N
New and last directions equals. I go forward.
My curNode: (6;4) hasBreeze 
My direction is: S
I turn right.
My curNode: (6;4) hasBreeze 
My direction is: S
I turn right.
My curNode: (6;4) hasBreeze 
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;3)
My direction is: E
I turn left.
My curNode: (6;3)
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;3) hasBreeze 
My direction is: W
I turn right.
My curNode: (7;3) hasBreeze 
My direction is: W
I turn right.
My curNode: (7;3) hasBreeze 
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;3)
My direction is: S
I turn left.
My curNode: (6;3)
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;2)
My direction is: E
I turn left.
My curNode: (6;2)
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;2)
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;2)
My direction is: N
I turn left.
My curNode: (8;2)
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;3)
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;4) hasBreeze 
My direction is: S
I turn right.
My curNode: (8;4) hasBreeze 
My direction is: S
I turn right.
My curNode: (8;4) hasBreeze 
My direction is: S
New and last directions equals. I go forward.
My curNode: (8;3)
My direction is: E
I turn left.
My curNode: (8;3)
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;3)
My direction is: N
I turn left.
My curNode: (9;3)
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;4)
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;5)
curNode has gold and i grab the gold.
My curNode: (9;5)
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (9;5)
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (9;5)
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;4)
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;3)
goDirection is IDLE. I go home
My direction is: W
I turn right.
My curNode: (9;3)
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;3)
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;3) hasBreeze 
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;3)
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;3)
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;3) hasBreeze 
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;3)
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;3)
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;3)
goDirection is IDLE. I go home
My direction is: S
I turn left.
My curNode: (1;3)
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;2)
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;1)
I wants to leave and I am at entrance, climb out!
My curNode: (1;1)
I wants to leave and I am at entrance, climb out!
