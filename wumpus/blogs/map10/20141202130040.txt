My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;1) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (2;1) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (2;1) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;5) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;5) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;5) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;5) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;5) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;5) hasStench  hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (2;5) hasStench  hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;3) hasBreeze 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (2;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;2) hasBreeze 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (3;2) hasBreeze 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (3;2) hasBreeze 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;2)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;3)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;3)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;3)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;3)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;4)
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;4) hasBreeze 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (3;4) hasBreeze 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;5)
Deduced that Supmuw is murderous. X adjacent.
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;6) hasStench 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (3;7) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (3;7) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (3;7) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;6) hasStench 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (3;6) hasStench 
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (4;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;5) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (4;5) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;5)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;5) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (2;5) hasStench  hasMoo 
shoot the wumpus!
I has arrow and i shot.
My curNode: (2;5) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;6) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;7) hasStench  hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (2;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (1;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;9)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;7) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (1;7) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;7) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;7) hasMoo 
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;9)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;9)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;9)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;5)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;1) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (4;1) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (4;1) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;4) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (5;4) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (5;4) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (5;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;3) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (7;3) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (7;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (9;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;5)
curNode has gold and i grab the gold.
My curNode: (9;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (9;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (9;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;4)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
I turn right.
My curNode: (9;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;1) hasBreeze 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: N
I turn right.
My curNode: (4;1) hasBreeze 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
I turn left.
My curNode: (4;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;2) hasBreeze 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn left.
My curNode: (1;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;1)
I has gold and Supmuw not Friendly, i go home.
I wants to leave and I am at entrance, climb out!
My curNode: (1;1)
I has gold and Supmuw not Friendly, i go home.
I wants to leave and I am at entrance, climb out!
